version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: redleads
      POSTGRES_USER: redleads
      POSTGRES_PASSWORD: redleads_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - redleads-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - redleads-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://redleads:redleads_dev_password@postgres:5432/redleads
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - redleads-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - redleads-network
    restart: unless-stopped

  # Reddit Monitor Service
  reddit-monitor:
    build:
      context: ./backend/reddit-monitor
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://redleads:redleads_dev_password@postgres:5432/redleads
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/reddit-monitor:/app
    networks:
      - redleads-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  redleads-network:
    driver: bridge